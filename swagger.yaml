swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  //endpoint to fetch all accounts of the authenticated user
  /user/accounts:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: fetch all accounts of the authenticated user
      description: Endpoint to fetch all accounts of the authenticated user
      produces:
        - application/json
      responses:
        '200':
          description: User accounts retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  //endpoint to fetch all transactions of a specific account of the authenticated user
  /user/accounts/${accountId}/transactions: // ou /user/accounts/transactions ?
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: fetch all transactions of a specific account of the authenticated user
      description: Endpoint to fetch all transactions of a specific account of the authenticated user
      parameters:
        - in: body
          name: body
          description: AccountId Payload
          required: true
          schema:
            properties:
              accountId:
                type: string
                description: ID of the account.
      produces:
        - application/json
      responses:
        '200':
          description: account transactions retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  //endpoint to update at least one of transaction.note and/or transaction.category of a specific transaction in a specific account of the authenticated user
  /user/accounts/${accountId}/transactions/${transactionId}: //ou /user/accounts/transactions ?
  put:
    security:
      - Bearer: []
    tags:
      - User Module
    summary: fetch all transactions of a specific account of the authenticated user
    description: Endpoint to fetch all transactions of a specific account of the authenticated user
    parameters:
      - in: body
        name: body
        description: AccountId Payload
        schema:
          type: object
          properties:
            accountId:
              type: string
              description: ID of the account.
            transactionId:
              type: string
              description: ID of the transaction
            transactionCategory:
              type: string
              description: Category of the transaction
            transactionNote:
              type: string
              description: Note of the transaction
  //Additional logic is required in the backend to force either note or category to be in the body
          required: 
            - accountId
            - transactionId
    produces:
      - application/json
    responses:
      '200':
        description: account transactions retrieved successully
        schema:
          $ref: '#/definitions/ApiResponse'
      '400':
        description: Invalid Fields
      '500':
        description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  userAccount:
    type: object
    properties:
      type:
        type: string //Checking / Savings / Credit Card
      id:
        type: string //x8349 / x6712 / x8349
      balance:
        type: string // $2,082.79 / $10,928.42 / $184.30
