swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/accounts:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Account API
      description: API for fetching all user accounts
      produces:
        - application/json
      responses:
        '200':
          description: User accounts retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/userAccount'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/accounts/{accountId}/transactions:
    post:
      security:
        - Bearer: []
      tags:
        - User Transactions Module
      summary: User Account Transactions API
      description: API for fetching all of an account's transactions
      parameters:
        - in: path
          name: accountId
          description: ID of the account
          required: true
          type: string
        - in: body
          name: body
          description: AccountId Payload
          required: true
          schema:
            properties:
              accountId:
                type: string
                description: ID of the account.
      produces:
        - application/json
      responses:
        '200':
          description: account transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/accountTransaction'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/accounts/{accountId}/transactions/{transactionId}/note:
    put:
      security:
        - Bearer: []
      tags:
        - User Transactions Module
      summary: Update Transaction Note
      description: API for updating the note of a transaction
      parameters:
        - in: path
          name: accountId
          description: ID of the account
          required: true
          type: string
        - in: path
          name: transactionId
          description: ID of the transaction
          required: true
          type: string
        - in: body
          name: body
          description: Payload containing the transaction note to update
          required: true
          schema:
            type: object
            properties:
              note:
                type: string
                description: New note value. Set to null to delete.
                default: null
      produces:
        - application/json
      responses:
        '200':
          description: Transaction note updated successfully
          schema:
            $ref: '#/definitions/TransactionUpdate'
          examples:
            application/json:
              status: 200
              message: Transaction note updated successfully
              details:
                action: updated
        '201':
          description: Transaction note created successfully
          schema:
            $ref: '#/definitions/TransactionUpdate'
          examples:
            application/json:
              status: 201
              message: Transaction note created successfully
              details:
                action: created
        '204':
          description: Transaction note deleted successfully
          schema:
            $ref: '#/definitions/TransactionUpdate'
          examples:
            application/json:
              status: 204
              message: Transaction note deleted successfully
              details:
                action: deleted
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/accounts/{accountId}/transactions/{transactionId}/category:
    put:
      security:
        - Bearer: []
      tags:
        - User Transactions Module
      summary: Update Transaction Category
      description: API for updating the category of a specific transaction
      parameters:
        - in: path
          name: accountId
          description: ID of the account
          required: true
          type: string
        - in: path
          name: transactionId
          description: ID of the transaction
          required: true
          type: string
        - in: body
          name: body
          description: Payload containing the transaction category to update
          required: true
          schema:
            type: object
            properties:
              transactionCategory:
                type: string
                description: New category value. Set to null to delete.
                default: null
      produces:
        - application/json
      responses:
        '200':
          description: Transaction category updated successfully
          schema:
            $ref: '#/definitions/TransactionUpdate'
          examples:
            application/json:
              status: 200
              message: Transaction category updated successfully
              details:
                action: updated
        '201':
          description: Transaction category created successfully
          schema:
            $ref: '#/definitions/TransactionUpdate'
          examples:
            application/json:
              status: 201
              message: Transaction category created successfully
              details:
                action: created
        '204':
          description: Transaction category deleted successfully
          schema:
            $ref: '#/definitions/TransactionUpdate'
          examples:
            application/json:
              status: 204
              message: Transaction category deleted successfully
              details:
                action: deleted
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  userAccount:
    type: object
    properties:
      type:
        type: string
        description: account type
      id:
        type: string
        description: account ID
      balance:
        type: string
        description: account balance amount
  accountTransaction: 
    type: object
    properties:
      id:
        type: string
        description: transaction ID
      date: 
        type: string
        description: transaction date
      origin:
        type: string
        description: transaction origin
      amount:
        type: string
        description: transaction amount
      type:
        type: string
        description: transaction type
      newBalance:
        type: string
        description: Previous balance minus transaction amount
      category:
        type: string
        description: transaction category (optional)
      note:
        type: string
        description: transaction note (optional)
  TransactionUpdate:
    type: object
    properties:
      status:
        type: integer
        description: HTTP status code
      message:
        type: string
        description: Response message
      details:
        type: object
        properties:
          action:
            type: string
            enum: [updated, created, deleted]
            description: Action performed on the transaction